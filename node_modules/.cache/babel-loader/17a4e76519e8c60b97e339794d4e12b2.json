{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emreesendir\\\\Documents\\\\projects\\\\wms-frontend\\\\src\\\\main\\\\manage\\\\contents\\\\OrderListView.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { useTable } from 'react-table';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = styled.table`\n    margin-top: 20px;\n    font-family: Arial, Helvetica, sans-serif;\n    border-collapse: collapse;\n    width: 90%;\n\n    td, th {\n        border: 1px solid #ddd;\n        padding: 8px;\n    }\n\n    tr:nth-child(even){background-color: #f2f2f2;}\n\n    tr:hover {background-color: #9b9877;}\n\n    th, tfoot td{\n        padding-top: 12px;\n        padding-bottom: 12px;\n        text-align: center;\n        background-color: #4CAF50;\n        color: white;\n    }\n`;\n_c = Table;\nconst COLUMNS = [{\n  Header: 'Remote Id',\n  Footer: 'Id',\n  accessor: 'remoteId'\n}, {\n  Header: 'Order Lines',\n  Footer: 'Order Lines',\n  accessor: 'productLines'\n}, {\n  Header: 'Status',\n  Footer: 'Status',\n  accessor: 'status'\n}, {\n  Header: 'Commands',\n  Footer: 'Commands',\n  accessor: 'commands'\n}, {\n  Header: 'Size',\n  Footer: 'Size',\n  accessor: 'size'\n}];\n\nconst OrderListView = () => {\n  _s();\n\n  const [DATA, setDATA] = useState([]);\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: 'http://127.0.0.1:8000/management/sizing'\n    }).then(res => setDATA(res.data)).catch(err => console.error(err));\n  }, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns: COLUMNS,\n    data: DATA\n  });\n  return /*#__PURE__*/_jsxDEV(Table, { ...getTableProps,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps,\n      children: rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps,\n              children: (() => {\n                console.log(cell);\n                return cell.render('Cell');\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n      children: footerGroups.map(footerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...footerGroup.getFooterGroupProps(),\n        children: footerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", { ...column.getFooterProps(),\n          children: column.render('Footer')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderListView, \"A+Fj7nAmaVD62HhgTzZlu3Lfpsc=\", false, function () {\n  return [useTable];\n});\n\n_c2 = OrderListView;\nexport default OrderListView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Table\");\n$RefreshReg$(_c2, \"OrderListView\");","map":{"version":3,"sources":["C:/Users/emreesendir/Documents/projects/wms-frontend/src/main/manage/contents/OrderListView.js"],"names":["styled","useState","useEffect","useTable","axios","Table","table","COLUMNS","Header","Footer","accessor","OrderListView","DATA","setDATA","method","url","then","res","data","catch","err","console","error","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","columns","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","log","footerGroup","getFooterGroupProps","getFooterProps"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\r\nimport { useState, useEffect } from 'react'\r\nimport { useTable } from 'react-table'\r\nimport axios from 'axios'\r\n\r\nconst Table = styled.table`\r\n    margin-top: 20px;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    border-collapse: collapse;\r\n    width: 90%;\r\n\r\n    td, th {\r\n        border: 1px solid #ddd;\r\n        padding: 8px;\r\n    }\r\n\r\n    tr:nth-child(even){background-color: #f2f2f2;}\r\n\r\n    tr:hover {background-color: #9b9877;}\r\n\r\n    th, tfoot td{\r\n        padding-top: 12px;\r\n        padding-bottom: 12px;\r\n        text-align: center;\r\n        background-color: #4CAF50;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst COLUMNS = [\r\n    {\r\n        Header: 'Remote Id',\r\n        Footer: 'Id',\r\n        accessor: 'remoteId'\r\n    },\r\n    {\r\n        Header: 'Order Lines',\r\n        Footer: 'Order Lines',\r\n        accessor: 'productLines'\r\n    },\r\n    {\r\n        Header: 'Status',\r\n        Footer: 'Status',\r\n        accessor: 'status'\r\n    },\r\n    {\r\n        Header: 'Commands',\r\n        Footer: 'Commands',\r\n        accessor: 'commands'\r\n    },\r\n    {\r\n        Header: 'Size',\r\n        Footer: 'Size',\r\n        accessor: 'size'\r\n    }\r\n]\r\n\r\nconst OrderListView = () => {\r\n\r\n    const [DATA, setDATA] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://127.0.0.1:8000/management/sizing'\r\n        })\r\n            .then(res => setDATA(res.data))\r\n            .catch(err => console.error(err));\r\n    }, [])\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        footerGroups,\r\n        rows,\r\n        prepareRow\r\n    } = useTable({\r\n        columns: COLUMNS,\r\n        data: DATA\r\n    })\r\n\r\n    return (\r\n        <Table {...getTableProps}>\r\n            <thead>\r\n                {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map( column => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps}>\r\n                {rows.map((row) => {\r\n                    prepareRow(row)\r\n                    return <tr {...row.getRowProps()}>\r\n                        {row.cells.map( cell => {\r\n                            return <td {...cell.getCellProps}>{(() => {console.log(cell); return cell.render('Cell');})()}</td>\r\n                        })}\r\n                    </tr>\r\n                })}\r\n            </tbody>\r\n            <tfoot>\r\n                {footerGroups.map((footerGroup) => (\r\n                        <tr {...footerGroup.getFooterGroupProps()}>\r\n                            {footerGroup.headers.map( column => (\r\n                                <td {...column.getFooterProps()}>{column.render('Footer')}</td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n            </tfoot>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default OrderListView"]},"metadata":{},"sourceType":"module"}