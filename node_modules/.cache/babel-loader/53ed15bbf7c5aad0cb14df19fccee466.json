{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emreesendir\\\\Documents\\\\projects\\\\wms-frontend\\\\src\\\\main\\\\manage\\\\contents\\\\OrderListView.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { useTable } from 'react-table';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Div = styled.div`\n    width: 90%;\n    max-height: 95%;\n    overflow: auto;\n    margin-top: 20px;\n    display: flex;\n    justify-content: center;\n    border-style: solid;\n`;\n_c = Div;\nconst Table = styled.table`\n    width: 100%;\n    height: 100%\n    font-family: Arial, Helvetica, sans-serif;\n    border-collapse: collapse;\n\n    td, th {\n        border: 1px solid #ddd;\n        padding: 8px;\n    }\n\n    tr:nth-child(even){background-color: #f2f2f2;}\n\n    tr:hover {background-color: #9b9877;}\n\n    th, tfoot td{\n        padding-top: 12px;\n        padding-bottom: 12px;\n        text-align: center;\n        background-color: #4CAF50;\n        color: white;\n    }\n`;\n_c2 = Table;\nconst Select = styled.select`\n    width: 90%;\n    height: 1000%;\n`;\n_c3 = Select;\nconst COLUMNS = [{\n  Header: 'Remote Id',\n  Footer: 'Remote Id',\n  accessor: 'remoteId'\n}, {\n  Header: 'Order',\n  Footer: 'Order',\n  accessor: data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.productLines.map(line => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [line.quantity, \" piece(s) \", line.name, \". Location: \", line.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this))\n    }, void 0, false);\n  }\n}, {\n  Header: 'Status',\n  Footer: 'Status',\n  accessor: 'status'\n}, {\n  Header: 'Commands',\n  Footer: 'Commands',\n  accessor: 'commands'\n}, {\n  Header: 'Size',\n  Footer: 'Size',\n  accessor: data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        id: data.id,\n        name: \"cars\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"small\",\n          children: \"Small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"large\",\n          children: \"Large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }\n}];\n\nconst OrderListView = () => {\n  _s();\n\n  const [DATA, setDATA] = useState([]);\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: 'http://10.13.255.185:80/management/sizing'\n    }).then(res => setDATA(res.data)).catch(err => console.error(err));\n  }, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    // footerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns: COLUMNS,\n    data: DATA\n  });\n  return /*#__PURE__*/_jsxDEV(Div, {\n    children: /*#__PURE__*/_jsxDEV(Table, { ...getTableProps,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps,\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps,\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderListView, \"s/0NUDZxOxCQV3ocO4JuHcJ5lRY=\", false, function () {\n  return [useTable];\n});\n\n_c4 = OrderListView;\nexport default OrderListView;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Div\");\n$RefreshReg$(_c2, \"Table\");\n$RefreshReg$(_c3, \"Select\");\n$RefreshReg$(_c4, \"OrderListView\");","map":{"version":3,"sources":["C:/Users/emreesendir/Documents/projects/wms-frontend/src/main/manage/contents/OrderListView.js"],"names":["styled","useState","useEffect","useTable","axios","Div","div","Table","table","Select","select","COLUMNS","Header","Footer","accessor","data","productLines","map","line","quantity","name","location","id","OrderListView","DATA","setDATA","method","url","then","res","catch","err","console","error","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","columns","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\r\nimport { useState, useEffect } from 'react'\r\nimport { useTable } from 'react-table'\r\nimport axios from 'axios'\r\n\r\nconst Div = styled.div`\r\n    width: 90%;\r\n    max-height: 95%;\r\n    overflow: auto;\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    border-style: solid;\r\n`;\r\n\r\nconst Table = styled.table`\r\n    width: 100%;\r\n    height: 100%\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    border-collapse: collapse;\r\n\r\n    td, th {\r\n        border: 1px solid #ddd;\r\n        padding: 8px;\r\n    }\r\n\r\n    tr:nth-child(even){background-color: #f2f2f2;}\r\n\r\n    tr:hover {background-color: #9b9877;}\r\n\r\n    th, tfoot td{\r\n        padding-top: 12px;\r\n        padding-bottom: 12px;\r\n        text-align: center;\r\n        background-color: #4CAF50;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 90%;\r\n    height: 1000%;\r\n`;\r\n\r\nconst COLUMNS = [\r\n    {\r\n        Header: 'Remote Id',\r\n        Footer: 'Remote Id',\r\n        accessor: 'remoteId'\r\n    },\r\n    {\r\n        Header: 'Order',\r\n        Footer: 'Order',\r\n        accessor: data => {\r\n            return (\r\n                <>\r\n                    {data.productLines.map(line => \r\n                        <p>{line.quantity} piece(s) {line.name}. Location: {line.location}</p>\r\n                    )}\r\n                </>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        Header: 'Status',\r\n        Footer: 'Status',\r\n        accessor: 'status'\r\n    },\r\n    {\r\n        Header: 'Commands',\r\n        Footer: 'Commands',\r\n        accessor: 'commands'\r\n    },\r\n    {\r\n        Header: 'Size',\r\n        Footer: 'Size',\r\n        accessor: data => {\r\n            return (\r\n                <>\r\n                    <Select id={data.id} name=\"cars\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"small\">Small</option>\r\n                        <option value=\"medium\">Medium</option>\r\n                        <option value=\"large\">Large</option>\r\n                    </Select>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n]\r\n\r\nconst OrderListView = () => {\r\n\r\n    const [DATA, setDATA] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://10.13.255.185:80/management/sizing'\r\n        })\r\n            .then(res => setDATA(res.data))\r\n            .catch(err => console.error(err));\r\n    }, [])\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        // footerGroups,\r\n        rows,\r\n        prepareRow\r\n    } = useTable({\r\n        columns: COLUMNS,\r\n        data: DATA\r\n    })\r\n\r\n    return (\r\n        <Div>\r\n            <Table {...getTableProps}>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                            <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                {headerGroup.headers.map( column => (\r\n                                    <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps}>\r\n                    {rows.map((row) => {\r\n                        prepareRow(row)\r\n                        return <tr {...row.getRowProps()}>\r\n                            {row.cells.map( cell => {\r\n                                return <td {...cell.getCellProps}>{cell.render('Cell')}</td>\r\n                            })}\r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n                {/* <tfoot>\r\n                    {footerGroups.map((footerGroup) => (\r\n                            <tr {...footerGroup.getFooterGroupProps()}>\r\n                                {footerGroup.headers.map( column => (\r\n                                    <td {...column.getFooterProps()}>{column.render('Footer')}</td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                </tfoot> */}\r\n            </Table>\r\n        </Div>\r\n    )\r\n}\r\n\r\nexport default OrderListView"]},"metadata":{},"sourceType":"module"}