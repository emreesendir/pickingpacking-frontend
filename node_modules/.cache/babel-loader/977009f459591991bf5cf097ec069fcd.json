{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emreesendir\\\\Documents\\\\projects\\\\wms-frontend\\\\src\\\\main\\\\manage\\\\contents\\\\OrderListView.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLUMNS = [{\n  Header: 'Remote Id',\n  accessor: 'remoteId'\n}, {\n  Header: 'Order Lines',\n  accessor: 'productLines'\n}];\nconst DATA = [{\n  \"remoteId\": \"25\",\n  \"productLines\": \"productLines\"\n}];\n\nconst OrderListView = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => DATA, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps,\n      children: [rows.map(row => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps,\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderListView, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n\n_c = OrderListView;\nexport default OrderListView;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderListView\");","map":{"version":3,"sources":["C:/Users/emreesendir/Documents/projects/wms-frontend/src/main/manage/contents/OrderListView.js"],"names":["styled","useMemo","useTable","axios","COLUMNS","Header","accessor","DATA","OrderListView","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,MAAM,EAAE,WADZ;AAEIC,EAAAA,QAAQ,EAAE;AAFd,CADY,EAKZ;AACID,EAAAA,MAAM,EAAE,aADZ;AAEIC,EAAAA,QAAQ,EAAE;AAFd,CALY,CAAhB;AAWA,MAAMC,IAAI,GAAG,CACT;AACI,cAAY,IADhB;AAEI,kBAAgB;AAFpB,CADS,CAAb;;AAQA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAMC,OAAO,GAAGR,OAAO,CAAC,MAAMG,OAAP,EAAgB,EAAhB,CAAvB;AACA,QAAMM,IAAI,GAAGT,OAAO,CAAC,MAAMM,IAAP,EAAa,EAAb,CAApB;AAEA,QAAMI,aAAa,GAAGT,QAAQ,CAAC;AAC3BO,IAAAA,OAD2B;AAE3BC,IAAAA;AAF2B,GAAD,CAA9B;AAKA,QAAM;AACFE,IAAAA,aADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,IAJE;AAKFC,IAAAA;AALE,MAMFL,aANJ;AAQA,sBACI,sBAAWC,aAAX;AAAA,4BACI;AAAA,gBACKE,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBACV,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAM,iBAC5B,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,oBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADP;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,sBAAWV,iBAAX;AAAA,iBACKE,IAAI,CAACE,GAAL,CAAUO,GAAD,IAAS;AACfR,QAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,4BAAO,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,oBACFD,GAAG,CAACE,KAAJ,CAAUT,GAAV,CAAeU,IAAI,IAAI;AACpB,gCAAO,mBAAQA,IAAI,CAACC,YAAb;AAAA,wBAA4BD,IAAI,CAACJ,MAAL,CAAY,MAAZ;AAA5B;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFA;AADE;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKH,OAPA,CADL,eASI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA5CD;;GAAMf,a;UAKoBN,Q;;;KALpBM,a;AA8CN,eAAeA,aAAf","sourcesContent":["import styled from 'styled-components'\r\nimport { useMemo } from 'react'\r\nimport { useTable } from 'react-table'\r\nimport axios from 'axios'\r\n\r\nconst COLUMNS = [\r\n    {\r\n        Header: 'Remote Id',\r\n        accessor: 'remoteId'\r\n    },\r\n    {\r\n        Header: 'Order Lines',\r\n        accessor: 'productLines'\r\n    }\r\n]\r\n\r\nconst DATA = [\r\n    {\r\n        \"remoteId\": \"25\",\r\n        \"productLines\": \"productLines\"\r\n    }\r\n]\r\n\r\n\r\nconst OrderListView = () => {\r\n    \r\n    const columns = useMemo(() => COLUMNS, [])\r\n    const data = useMemo(() => DATA, [])\r\n\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data\r\n    })\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow\r\n    } = tableInstance\r\n\r\n    return (\r\n        <table {...getTableProps}>\r\n            <thead>\r\n                {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map( column => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps}>\r\n                {rows.map((row) => {\r\n                    prepareRow(row)\r\n                    return <tr {...row.getRowProps()}>\r\n                        {row.cells.map( cell => {\r\n                            return <td {...cell.getCellProps}>{cell.render('Cell')}</td>\r\n                        })}\r\n                    </tr>\r\n                })}\r\n                <tr>\r\n                    <td></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default OrderListView"]},"metadata":{},"sourceType":"module"}