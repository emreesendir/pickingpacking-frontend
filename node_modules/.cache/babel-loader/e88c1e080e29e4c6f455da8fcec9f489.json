{"ast":null,"code":"import axios from 'axios';\nconst {\n  REACT_APP_API_BASE_URL\n} = process.env;\nexport function checkAccessRights() {\n  try {\n    let accessRights = [];\n    const token = localStorage.getItem('token');\n    axios.get(`${REACT_APP_API_BASE_URL}authentication/accessrights/`, {\n      Authorization: `Token ${token}`\n    }).then(res => accessRights = res.data);\n    return accessRights;\n  } catch {\n    return false;\n  }\n}\nexport async function login(e, username, password) {\n  let respone = await axios.post(`${REACT_APP_API_BASE_URL}authentication/token/`, {\n    username: username,\n    password: password\n  });\n\n  if ('Error' in respone.data) {\n    console.log(respone.data);\n    return false;\n  } else {\n    localStorage.setItem('token', respone.data.token);\n    localStorage.setItem('username', username);\n    return true;\n  }\n}\nexport function logout() {}\nexport function wait(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}","map":{"version":3,"sources":["C:/Users/emreesendir/Documents/projects/wms-frontend/src/global/Services.js"],"names":["axios","REACT_APP_API_BASE_URL","process","env","checkAccessRights","accessRights","token","localStorage","getItem","get","Authorization","then","res","data","login","e","username","password","respone","post","console","log","setItem","logout","wait","ms","Promise","resolve","setTimeout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAM;AAACC,EAAAA;AAAD,IAA2BC,OAAO,CAACC,GAAzC;AAEA,OAAO,SAASC,iBAAT,GAA6B;AAChC,MAAG;AACC,QAAIC,YAAY,GAAG,EAAnB;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAR,IAAAA,KAAK,CAACS,GAAN,CAAW,GAAER,sBAAuB,8BAApC,EAAmE;AAACS,MAAAA,aAAa,EAAG,SAAQJ,KAAM;AAA/B,KAAnE,EACKK,IADL,CACUC,GAAG,IAAIP,YAAY,GAAGO,GAAG,CAACC,IADpC;AAEA,WAAOR,YAAP;AACH,GAND,CAOA,MAAK;AACD,WAAO,KAAP;AACH;AACJ;AAED,OAAO,eAAeS,KAAf,CAAqBC,CAArB,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4C;AAC/C,MAAIC,OAAO,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAY,GAAElB,sBAAuB,uBAArC,EAA6D;AAAEe,IAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,IAAAA,QAAQ,EAAEA;AAAhC,GAA7D,CAApB;;AACA,MAAG,WAAWC,OAAO,CAACL,IAAtB,EAA2B;AACvBO,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACL,IAApB;AACA,WAAO,KAAP;AACH,GAHD,MAGK;AACDN,IAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BJ,OAAO,CAACL,IAAR,CAAaP,KAA3C;AACAC,IAAAA,YAAY,CAACe,OAAb,CAAqB,UAArB,EAAiCN,QAAjC;AACA,WAAO,IAAP;AACH;AACJ;AAED,OAAO,SAASO,MAAT,GAAkB,CAExB;AAED,OAAO,SAASC,IAAT,CAAcC,EAAd,EAAiB;AACpB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACH","sourcesContent":["import axios from 'axios'\r\n\r\nconst {REACT_APP_API_BASE_URL} = process.env;\r\n\r\nexport function checkAccessRights() {\r\n    try{\r\n        let accessRights = [];\r\n        const token = localStorage.getItem('token');\r\n        axios.get(`${REACT_APP_API_BASE_URL}authentication/accessrights/`, {Authorization: `Token ${token}`})\r\n            .then(res => accessRights = res.data);\r\n        return accessRights\r\n    }\r\n    catch{\r\n        return false\r\n    }\r\n}\r\n\r\nexport async function login(e, username, password) {\r\n    let respone = await axios.post(`${REACT_APP_API_BASE_URL}authentication/token/`, { username: username, password: password })\r\n    if('Error' in respone.data){\r\n        console.log(respone.data);\r\n        return false;\r\n    }else{\r\n        localStorage.setItem('token', respone.data.token);\r\n        localStorage.setItem('username', username);\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n\r\n}\r\n\r\nexport function wait(ms){\r\n    return new Promise(resolve => setTimeout(resolve, ms))\r\n}"]},"metadata":{},"sourceType":"module"}