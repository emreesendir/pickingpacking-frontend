{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emreesendir\\\\Documents\\\\projects\\\\wms-frontend\\\\src\\\\main\\\\manage\\\\content\\\\OrderListView.js\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useState, useEffect } from 'react';\nimport { useTable } from 'react-table';\nimport axios from 'axios';\nimport Loading from '../Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  REACT_APP_API_BASE_URL\n} = process.env; //#region style\n\nconst Div = styled.div`\n    width: 90%;\n    height: 95%;\n    overflow: auto;\n    margin-top: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: top;\n    border-style: solid;\n\n    @media screen and (max-width: 700px){\n        font-size: 70%;\n    }\n`;\n_c = Div;\nconst TableDiv = styled.div`\n    max-height: 94%;\n    overflow: auto;\n    border-width: 0.1em;\n    border-style: solid;\n`;\n_c2 = TableDiv;\nconst Table = styled.table`\n    width: 100%;\n    font-family: Arial, Helvetica, sans-serif;\n    border-collapse: collapse;\n\n    td, th {\n        border: 1px solid #ddd;\n        padding: 8px;\n    }\n\n    tr:nth-child(even){background-color: #f2f2f2;}\n\n    tr:hover {background-color: #c0bfb0;}\n\n    th, tfoot td{\n        padding-top: 12px;\n        padding-bottom: 12px;\n        text-align: center;\n        background-color: #4CAF50;\n        color: white;\n    }\n`;\n_c3 = Table;\nconst Select = styled.select`\n    width: 90%;\n    height: 2em;\n`;\n_c4 = Select;\nconst BottomDiv = styled.div`\n    width: 100%;\n    height: 4%;\n    display: flex;\n    margin-top: auto;\n    margin-bottom: 0.5em;\n`;\n_c5 = BottomDiv;\nconst Button = styled.button`\n    width: 6em;\n    height: 3em;\n    margin: auto 0.5em 0 auto;\n\n    @media screen and (max-width: 700px){\n        font-size: 70%;\n    }\n`; //#endregion\n//#region column setup\n\n_c6 = Button;\nlet changes = {};\nconst COLUMNS = [{\n  Header: 'Remote Id',\n  Footer: 'Remote Id',\n  accessor: 'remoteId'\n}, {\n  Header: 'Order',\n  Footer: 'Order',\n  accessor: data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.productLines.map(line => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'left',\n          marginLeft: '1em'\n        },\n        children: [\"\\u2022 \", line.quantity, \" piece(s) \", line.name, \". Location: \", line.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this))\n    }, void 0, false);\n  }\n}, {\n  Header: 'Status',\n  Footer: 'Status',\n  accessor: 'status'\n}, {\n  Header: 'Commands',\n  Footer: 'Commands',\n  accessor: data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.commands.split('.').map(command => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: command\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }, this))\n    }, void 0, false);\n  }\n}, {\n  Header: 'Size',\n  Footer: 'Size',\n  accessor: data => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        id: data.id,\n        name: \"cars\",\n        onChange: e => changes[e.target.id] = e.target.value,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          selected: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"small\",\n          children: \"Small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"large\",\n          children: \"Large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)\n    }, void 0, false);\n  }\n}]; //#endregion\n\nconst OrderListView = () => {\n  _s();\n\n  // Table setup\n  const [DATA, setDATA] = useState([]);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns: COLUMNS,\n    data: DATA\n  }); // refreshTable\n\n  const refreshTable = () => {\n    console.log('refresh function');\n    axios({\n      method: 'get',\n      url: `${REACT_APP_API_BASE_URL}management/sizing`\n    }).then(res => setDATA(res.data)).catch(err => console.error(err));\n    changes = {};\n  };\n\n  useEffect(refreshTable, []); // Post sizes\n\n  const wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n  const [loading, setLoading] = useState([false, '', '']);\n\n  const submit = () => {\n    setLoading([true, 'Sending data to server...', 'spinner']); // filter data\n\n    const filtered = {};\n\n    for (const id in changes) {\n      if (changes[id] !== '') {\n        filtered[id] = changes[id];\n      }\n    }\n\n    console.log(filtered); // sending data to server. - events will be created and event ids will return\n\n    axios({\n      method: 'post',\n      url: `${REACT_APP_API_BASE_URL}management/sizing/`,\n      data: filtered\n    }).then(res => {\n      console.log(res.data);\n      setLoading([true, 'Successfull.', 'done']);\n      wait(2 * 1000).then(() => {\n        setLoading([false, '', '']);\n        refreshTable();\n      });\n    }).catch(err => {\n      console.log(err);\n      setLoading([true, '! SERVER ERROR !', 'error']);\n      wait(2 * 1000).then(() => {\n        setLoading([false, '', '']);\n        refreshTable();\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading[0] && /*#__PURE__*/_jsxDEV(Loading, {\n      message: loading[1],\n      symbol: loading[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Div, {\n      children: [/*#__PURE__*/_jsxDEV(TableDiv, {\n        children: /*#__PURE__*/_jsxDEV(Table, { ...getTableProps,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n              children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n                children: column.render('Header')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps,\n            children: rows.map(row => {\n              prepareRow(row);\n              return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n                children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps,\n                  children: cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 40\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BottomDiv, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: submit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderListView, \"KT2PNiCfFiL/RVGh8IVhCluu4jQ=\", false, function () {\n  return [useTable];\n});\n\n_c7 = OrderListView;\nexport default OrderListView;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Div\");\n$RefreshReg$(_c2, \"TableDiv\");\n$RefreshReg$(_c3, \"Table\");\n$RefreshReg$(_c4, \"Select\");\n$RefreshReg$(_c5, \"BottomDiv\");\n$RefreshReg$(_c6, \"Button\");\n$RefreshReg$(_c7, \"OrderListView\");","map":{"version":3,"sources":["C:/Users/emreesendir/Documents/projects/wms-frontend/src/main/manage/content/OrderListView.js"],"names":["styled","useState","useEffect","useTable","axios","Loading","REACT_APP_API_BASE_URL","process","env","Div","div","TableDiv","Table","table","Select","select","BottomDiv","Button","button","changes","COLUMNS","Header","Footer","accessor","data","productLines","map","line","textAlign","marginLeft","quantity","name","location","commands","split","command","id","e","target","value","OrderListView","DATA","setDATA","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","columns","refreshTable","console","log","method","url","then","res","catch","err","error","wait","ms","Promise","resolve","setTimeout","loading","setLoading","submit","filtered","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import styled from 'styled-components'\r\nimport { useState, useEffect } from 'react'\r\nimport { useTable } from 'react-table'\r\nimport axios from 'axios'\r\nimport Loading from '../Loading'\r\n\r\nconst {REACT_APP_API_BASE_URL} = process.env;\r\n\r\n//#region style\r\n\r\nconst Div = styled.div`\r\n    width: 90%;\r\n    height: 95%;\r\n    overflow: auto;\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: top;\r\n    border-style: solid;\r\n\r\n    @media screen and (max-width: 700px){\r\n        font-size: 70%;\r\n    }\r\n`;\r\n\r\nconst TableDiv = styled.div`\r\n    max-height: 94%;\r\n    overflow: auto;\r\n    border-width: 0.1em;\r\n    border-style: solid;\r\n`;\r\n\r\nconst Table = styled.table`\r\n    width: 100%;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    border-collapse: collapse;\r\n\r\n    td, th {\r\n        border: 1px solid #ddd;\r\n        padding: 8px;\r\n    }\r\n\r\n    tr:nth-child(even){background-color: #f2f2f2;}\r\n\r\n    tr:hover {background-color: #c0bfb0;}\r\n\r\n    th, tfoot td{\r\n        padding-top: 12px;\r\n        padding-bottom: 12px;\r\n        text-align: center;\r\n        background-color: #4CAF50;\r\n        color: white;\r\n    }\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 90%;\r\n    height: 2em;\r\n`;\r\n\r\nconst BottomDiv = styled.div`\r\n    width: 100%;\r\n    height: 4%;\r\n    display: flex;\r\n    margin-top: auto;\r\n    margin-bottom: 0.5em;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    width: 6em;\r\n    height: 3em;\r\n    margin: auto 0.5em 0 auto;\r\n\r\n    @media screen and (max-width: 700px){\r\n        font-size: 70%;\r\n    }\r\n`;\r\n\r\n//#endregion\r\n\r\n//#region column setup\r\n\r\nlet changes = {};\r\n\r\nconst COLUMNS = [\r\n    {\r\n        Header: 'Remote Id',\r\n        Footer: 'Remote Id',\r\n        accessor: 'remoteId'\r\n    },\r\n    {\r\n        Header: 'Order',\r\n        Footer: 'Order',\r\n        accessor: data => {\r\n            return (\r\n                <>\r\n                    {data.productLines.map(line => \r\n                        <p style={{textAlign: 'left', marginLeft: '1em'}}>• {line.quantity} piece(s) {line.name}. Location: {line.location}</p>\r\n                    )}\r\n                </>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        Header: 'Status',\r\n        Footer: 'Status',\r\n        accessor: 'status'\r\n    },\r\n    {\r\n        Header: 'Commands',\r\n        Footer: 'Commands',\r\n        accessor: data => {\r\n            return (\r\n                <>\r\n                    {data.commands.split('.').map(command => \r\n                        <p>{command}</p>)}\r\n                </>\r\n            )\r\n        }\r\n    },\r\n    {\r\n        Header: 'Size',\r\n        Footer: 'Size',\r\n        accessor: data => {\r\n            return (\r\n                <>\r\n                    <Select id={data.id} name=\"cars\" onChange={(e) => changes[e.target.id] = e.target.value}>\r\n                        <option value=\"\" selected></option>\r\n                        <option value=\"small\">Small</option>\r\n                        <option value=\"medium\">Medium</option>\r\n                        <option value=\"large\">Large</option>\r\n                    </Select>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n]\r\n\r\n//#endregion\r\n\r\nconst OrderListView = () => {\r\n\r\n    // Table setup\r\n    const [DATA, setDATA] = useState([])\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow\r\n    } = useTable({\r\n        columns: COLUMNS,\r\n        data: DATA\r\n    })\r\n\r\n    // refreshTable\r\n    const refreshTable = () => {\r\n        console.log('refresh function')\r\n        axios({\r\n            method: 'get',\r\n            url: `${REACT_APP_API_BASE_URL}management/sizing`\r\n        })\r\n            .then(res => setDATA(res.data))\r\n            .catch(err => console.error(err));\r\n        changes = {};\r\n    }\r\n\r\n    useEffect(refreshTable, [])\r\n\r\n    // Post sizes\r\n    const wait=ms=>new Promise(resolve => setTimeout(resolve, ms));\r\n    const [loading, setLoading] = useState([false, '', ''])\r\n\r\n    const submit = () => {\r\n        setLoading([true, 'Sending data to server...', 'spinner']);\r\n\r\n        // filter data\r\n        const filtered = {};\r\n        for (const id in changes) {\r\n            if(changes[id] !== ''){\r\n                filtered[id] = changes[id]\r\n            }\r\n        }\r\n        console.log(filtered)\r\n        // sending data to server. - events will be created and event ids will return\r\n        axios({\r\n            method: 'post',\r\n            url: `${REACT_APP_API_BASE_URL}management/sizing/`,\r\n            data: filtered,\r\n        })\r\n            .then(res => {\r\n                console.log(res.data);\r\n                setLoading([true, 'Successfull.', 'done']);\r\n                wait(2*1000).then(() => {\r\n                    setLoading([false, '', '']);\r\n                    refreshTable(); })\r\n                })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading([true, '! SERVER ERROR !', 'error']);\r\n                wait(2*1000).then(() => {\r\n                    setLoading([false, '', '']);\r\n                    refreshTable(); })\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {loading[0] && <Loading message={loading[1]} symbol={loading[2]}/>}\r\n            <Div>\r\n                <TableDiv>\r\n                    <Table {...getTableProps}>\r\n                        <thead>\r\n                            {headerGroups.map((headerGroup) => (\r\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                        {headerGroup.headers.map( column => (\r\n                                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                                        ))}\r\n                                    </tr>\r\n                                ))}\r\n                        </thead>\r\n                        <tbody {...getTableBodyProps}>\r\n                            {rows.map((row) => {\r\n                                prepareRow(row)\r\n                                return <tr {...row.getRowProps()}>\r\n                                    {row.cells.map( cell => (\r\n                                        <td {...cell.getCellProps}>{cell.render('Cell')}</td>\r\n                                    ))}\r\n                                </tr>\r\n                            })}\r\n                        </tbody>\r\n                    </Table>\r\n                </TableDiv>\r\n                <BottomDiv><Button onClick={submit}>Submit</Button></BottomDiv>\r\n            </Div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListView"]},"metadata":{},"sourceType":"module"}